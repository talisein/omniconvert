name: CI

concurrency:
  group: CI
  cancel-in-progress: true

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - opened
      - edited
      - synchronize
      - reopened
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        flavor: [ubuntu, mac, windows]
        compiler: [gcc, clang, msvc]
        include:
          # define operating systems
          - flavor: ubuntu
            os: ubuntu-22.04
          - flavor: mac
            os: macos-12
          - flavor: windows
            os: windows-latest
          - compiler: gcc
            CC: gcc-12
            CXX: g++-12
          - compiler: clang
            flavor: ubuntu
            CC: clang-17
            CXX: clang++-17
            CC_LD: lld-17
            CXX_LD: lld-17
          - compiler: clang
            flavor: mac
            CC: clang
            CXX: clang++
          - DEVELOPER_DIR: /Applications/Xcode_14.1.app/Contents/Developer
            flavor: mac
        exclude:
          - flavor: windows
            compiler: gcc
          - flavor: windows
            compiler: clang
#          - flavor: mac
#            compiler: clang
          - flavor: mac
            compiler: msvc
          - flavor: ubuntu
            compiler: msvc
    permissions:
      actions: read
      contents: read
      security-events: write
      checks: write
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
      DEVELOPER_DIR: ${{ matrix.DEVELOPER_DIR }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - if: ${{ matrix.compiler == 'clang' && matrix.flavor == 'ubuntu' }}
        name: Install clang ubuntu
        run: |
          sudo apt-get remove -y python3-lldb-x.y python3-lldb-14 libc++1-14 libc++abi1-14 libunwind-14 libunwind-14-dev
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 17
          # libc++-16 doesn't have std::views::join yet
          sudo apt-get install libc++-17-dev libc++abi-17-dev
          sudo apt-get install libstdc++-12-dev

      - if: ${{ matrix.compiler == 'gcc' && matrix.flavor == 'ubuntu' }}
        name: Install gcc ubuntu
        run: |
          sudo apt-get install g++-12 libstdc++-12-dev
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 12
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 12
          sudo update-alternatives --set gcc /usr/bin/gcc-12
          sudo update-alternatives --set g++ /usr/bin/g++-12

      - if: ${{ matrix.flavor == 'ubuntu' }}
        name: Install deps ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build
          pip3 install meson

      - if: ${{ matrix.flavor == 'mac' }}
        name: Install deps mac
        run: |
          brew install meson gcc@12 ninja


      - if: ${{ matrix.flavor == 'windows' }}
        name: Install Meson
        run: |
          python -m pip install meson

      - if: ${{ matrix.flavor == 'windows' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure
        run: meson setup build --buildtype release

      - name: Compile
        run: meson compile -C build

      - name: Save logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: meson-log ${{ matrix.os }} ${{ matrix.compiler }}
          path: |
            build/meson-logs/meson-log.txt
            build/meson-logs/testlog.txt
          if-no-files-found: ignore
          retention-days: 5

      - if: ${{ matrix.flavor == 'windows' && (success() || failure()) }}
        name: Binary Windows
        uses: actions/upload-artifact@v3
        with:
          name: omniconvert-${{ matrix.os }}-${{ matrix.compiler }}
          path: build/source/omniconvert.exe
